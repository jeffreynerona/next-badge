{"version":3,"sources":["../../src/controller/user.js"],"names":["config","db","api","post","authenticate","session","scope","err","req","res","next","console","log","status","json","success","message","get","logout","send"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;kBAEe,gBAAmB;AAAA,KAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,KAARC,EAAQ,QAARA,EAAQ;;AACjC,KAAIC,MAAM,sBAAV;;AAEA;AACAA,KAAIC,IAAJ,CAAS,WAAT,EAAqB,mBAASC,YAAT,CACpB,gBADoB,EACF;AACjBC,WAAS,KADQ;AAEjBC,SAAO;AAFU,EADE,CAArB,EAIK,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAeC,IAAf,EAAwB;AAC3B,MAAIH,GAAJ,EAAS;AACRI,WAAQC,GAAR,CAAYL,GAAZ;AACA,UAAOE,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,aAAS,KADkB;AAE3BC,aAAST;AAFkB,IAArB,CAAP;AAIA;AACDG;AACD,EAbD,EAaE,UAACF,GAAD,EAAMC,GAAN,EAAc;AACfA,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBC,YAAS,IADW;AAEpBC,YAAS;AAFW,GAArB;AAIA,EAlBD;;AAoBA;AACAd,KAAIC,IAAJ,CAAS,QAAT,EAAmB,mBAASC,YAAT,CAClB,aADkB,EACH;AACdC,WAAS,KADK;AAEdC,SAAO;AAFO,EADG,CAAnB,EAII,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC3B,MAAGH,GAAH,EAAQ;AACP,UAAOE,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,KAAV,EAAiBC,SAAQT,GAAzB,EAArB,CAAP;AACA;AACDG;AACA,EATF;;AAWA;AACAR,KAAIe,GAAJ,CAAQ,SAAR,gCAAiC,UAACT,GAAD,EAAMC,GAAN,EAAc;AAC9CA,MAAIS,MAAJ;AACAT,MAAII,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,yBAArB;AACA,EAHD;;AAKAjB,KAAIe,GAAJ,CAAQ,QAAR,EAAkB,UAACT,GAAD,EAAMC,GAAN,EAAc;AAC/BA,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBC,YAAS,KADW;AAEpBC,YAAS;AAFW,GAArB;AAIA,EALD;;AAOAd,KAAIe,GAAJ,CAAQ,KAAR,gCAA6B,UAACT,GAAD,EAAKC,GAAL,EAAa;AACzCE,UAAQC,GAAR,CAAY,eAAZ;AACAH,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBC,YAAS,IADW;AAEpBC,YAAS;AAFW,GAArB;AAIA,EAND;;AAQA,QAAOd,GAAP;AACA,C","file":"user.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport User from '../model/user';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\n\nexport default ({ config, db}) => {\n\tlet api = Router();\n\n\t// '/v1/user/register'\n\tapi.post('/register',passport.authenticate(\n\t\t'local-register', {\n\t\t\tsession: false,\n\t\t\tscope: []\n\t\t}), (err, req, res,next) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn res.status(200).json({\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tmessage: err\n\t\t\t\t});\n\t\t\t} \n\t\t\tnext()\n\t},(req, res) => {\n\t\tres.status(200).json({\n\t\t\tsuccess: true,\n\t\t\tmessage: \"User has been created\"\n\t\t});\n\t});\n\n\t// '/v1/user/login'\n\tapi.post('/login', passport.authenticate(\n\t\t'local-login', {\n\t\t\tsession: false,\n\t\t\tscope: []\n\t\t}),(err, req, res, next) => {\n\t\t\tif(err) {\n\t\t\t\treturn res.status(200).json({success: false, message:err})\n\t\t\t}\n\t\t\tnext()\n\t\t}, generateAccessToken, respond);\n\n\t// 'v1/user/logout'\n\tapi.get('/logout', authenticate, (req, res) => {\n\t\tres.logout();\n\t\tres.status(200).send('Successfully logged out');\n\t});\n\t\n\tapi.get('/error', (req, res) => {\n\t\tres.status(200).json({\n\t\t\tsuccess: false,\n\t\t\tmessage: \"There was an error\"\n\t\t});\n\t});\n\n\tapi.get('/me', authenticate, (req,res) => {\n\t\tconsole.log(\"authenticated\");\n\t\tres.status(200).json({\n\t\t\tsuccess: true,\n\t\t\tmessage: \"Authenticated\"\n\t\t});\n\t});\n\n\treturn api;\n}"]}